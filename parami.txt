se esta usando npm install -g @angular/cli
ng new cliente
instalar dependencias con npm i 
luego se puede poner 
npm install -g @angular/cli

y de allí ng serve para ejecutar el proyecto


luego y y css
inicio en la terminal el proyecto ng serve luego aparece un mensaje que dice que si se quiere compartir datos  le decimos que si

se usa bootstrap
npm install bootstrap

en el archivo angular.json en la parte de "styles" aquí vamos a copiar la direccion de "node_modules/bootstrap/dist/css/bootstrap.css" se debe anteponer una coma

con el comando: ng g c components/crear-producto
la g es de generate y la  c es de component
estructura del comando ng inicia el comando de angular  luego g de generate, c de component y posteriormente la diracción donde quiero dicho componente
y se crea otro componente el cual sería: ng g c components/listar-productos
ahora se debe crear un servicio esto se crea con el comando


ng g s services/producto
la s seria para generar un servicio y posteriormente la ruta
en modelo creo un archivo el cual tendrá como nombre producto.ts

el modelo es para la creación de las tablas


ruteo:
en el archivo app-routing.module.ts el cual se encuentra en src este es el que maneja las rutas
para las rutas lo que se usa es agregar un objeto {path:'',component: nombre} enb este caso cuando el path sea vacio se enviará o se redirigira al componente que se haya configurado
esto se debe configurar en la parte de de: const routes: Routes = [ aqui va el objeto anteriormente creado ];

al crear un componente para poder llamarlo usar el camelcase ya que este reconoce que se esta trayendo una parte de la ruta para que sea redirigido

con la linea de código {path: '**' redirectTo: '', pathMatch: 'full'} lo que hago es que todo se redireccione a la carpeta o archivo raiz
en la pagina https://uigradients.com/ puedo ver los gradients que o quiera  par aplicarlos a las paginas

https://cdnjs.com/libraries/font-awesome
este me sirve para los iconos de font awesome en la cual se copia el primer link y ese se debe copiar en el index.html que sería el unico
ya con esto se uede ingresar a la pagina princupal de https://fontawesome.com/icons en la cual se pueden buscar los iconos

cuando se crea un componente este también crea un archivo css

igual se puede usar  googlefonts


también se usa reactive forms
ReactiveFormsModule esta iria en epp.module.ts y se debe igual inyectar desde imports


para el caso de las rutas se puede poner / para que se haga referencia a una ruta absoluta
si no tiene el / es ruta relativa 



***************************************************************************************
*****************************formularios reactivos ************************************
***************************************************************************************

para hacer uso de  reactive forms lo que debo hacer es irme a app.module.ts y aquí se debe importar el modulo esto se debe poner  en la parte de imports como 
ReactiveFormsModule 

https://angular.io/guide/reactive-forms

***************************************************************************************
********                            toastr angular              ********** 
***************************************************************************************

https://www.npmjs.com/package/ngx-toastr
instalacion 
npm install ngx-toastr --save
si no funciona se usa 
npm install ngx-toastr --legacy-peer-deps
o 
npm install ngx-toastr --force

se debe agregar esta linea en el archivo angular.json en la parte de styles 
  "node_modules/ngx-toastr/toastr.css" // try adding '../' if you're using angular cli before 6


para usarlo o importarlo se hace desde el app.modules y se pone 

import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

y se agrega en los imports del mismo archivo 

también se debe copiar el tost r
import { ToastrModule } from 'ngx-toastr';
y en app modules se pega y en imports se pone 
ToastrModule.forRoot()

ahora para el uso se inyecta en el constructor 

con las teclas ctrl + . y luego enter se importa el modulo de forma automatica

color verde
y para imprimir el mensaje se pone this.toastr.success('cuerpo', 'titulo');
color azul
y para imprimir el mensaje se pone this.toastr.info('Hello world!', 'Toastr fun!');


***************************************************************************************
**************************     hasta aquí va el frontend     **************************
***************************************************************************************


****************  ahora voy con el backend ****************
se va a usar node, express y mongo z

funciona con node v19.7.0
npm version 9.5.0
para ejecutar basta con  escribir el comando ng serve





